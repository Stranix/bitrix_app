# Generated by Django 4.2 on 2023-04-25 15:04

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=35, verbose_name='Название')),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=100, verbose_name='ФИО')),
                ('tg_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='Id сотрудника в телеграмме')),
                ('btrx_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='Id сотрудника в телеграмме')),
                ('is_admin', models.BooleanField(blank=True, default=True, verbose_name='Администратор?')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employees', to='tasks.department', verbose_name='Отдел')),
            ],
        ),
        migrations.CreateModel(
            name='TaskStage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('btrx_stage_id', models.PositiveSmallIntegerField(verbose_name='ID стадии заявки')),
                ('name', models.CharField(verbose_name='Стадия')),
            ],
        ),
        migrations.CreateModel(
            name='TaskStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('btrx_status_id', models.PositiveSmallIntegerField(verbose_name='ID статуса заявки')),
                ('name', models.CharField(verbose_name='Статус')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bitrix_id', models.PositiveIntegerField(db_index=True, verbose_name='ID задачи в Bitrix')),
                ('subject', models.CharField(db_index=True, verbose_name='Тема задачи')),
                ('description', models.TextField(verbose_name='Описание задачи')),
                ('result_comment', models.TextField(verbose_name='Результат задачи')),
                ('group_id', models.IntegerField(verbose_name='Рабочая группа')),
                ('files_url', models.TextField(verbose_name='Ссылки на вложенные документы')),
                ('create_at', models.DateTimeField(verbose_name='Дата и Время создания заявки')),
                ('start_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата и Время старта задачи')),
                ('duration_fact_time', models.IntegerField(blank=True, null=True, verbose_name='Время потраченное на заявку в минутах')),
                ('closed_date_time', models.DateTimeField(blank=True, null=True, verbose_name='Время и время закрытия задачи')),
                ('last_activity_date', models.DateTimeField(verbose_name='Дата и время последней активности по задаче')),
                ('accomplices', models.ManyToManyField(db_index=True, related_name='accomplice_tasks', to='tasks.employee', verbose_name='Соисполнители')),
                ('closed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='closed_task', to='tasks.employee', verbose_name='Закрыл задачу')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='created_tasks', to='tasks.employee', verbose_name='Создатель заявки')),
                ('parent_task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tasks.task', verbose_name='Родительская задача')),
                ('responsible', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='responsible_tasks', to='tasks.employee', verbose_name='Ответственный')),
                ('stage', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='tasks.taskstage', verbose_name='Стадия')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='tasks.taskstatus', verbose_name='Статус')),
                ('watchers', models.ManyToManyField(db_index=True, related_name='watcher_tasks', to='tasks.employee', verbose_name='Наблюдатели')),
            ],
        ),
        migrations.AddField(
            model_name='department',
            name='manager',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managers', to='tasks.employee', verbose_name='Менеджер отдела'),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(verbose_name='Текст')),
                ('create_at', models.DateTimeField(verbose_name='Дата создания комментария')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='comments', to='tasks.employee', verbose_name='Автор')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='comments', to='tasks.task', verbose_name='Задача')),
            ],
        ),
    ]
